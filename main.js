(()=>{"use strict";var n={365:(n,e,o)=>{o.d(e,{A:()=>A});var t=o(354),r=o.n(t),i=o(314),a=o.n(i)()(r());a.push([n.id,'* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  --shadow: rgba(0, 0, 0, 0.05) 0px 6px 10px 0px,\n    rgba(0, 0, 0, 0.1) 0px 0px 0px 1px;\n}\n\nbody {\n  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n}\n\n#dropdownpanel {\n  min-height: 500px;\n  background-color: lightgray;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 150px;\n}\n\n#dropdownpanel .maincontent {\n    display: flex;\n    flex-direction: row;\n    gap:20px;\n}\n\n.dropdowncontainer {\n  width: 200px;\n}\n\n.dropdownbutton {\n  position: relative;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 2px;\n  background-color: rgb(30, 144, 255);\n  color: white;\n  font-family: inherit;\n  font-size: 20px;\n  width: inherit;\n  box-shadow: var(--shadow);\n}\n\n.dropdownbutton:hover {\n  background-color: rgb(20, 134, 245);\n}\n\n.dropdowncontent {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: inherit;\n  box-shadow: var(--shadow);\n  visibility: hidden;\n  opacity: 0;\n}\n\n.dropdowncontent a {\n  padding: 10px 10px;\n  text-decoration: none;\n  background-color: rgb(173, 216, 230);\n  color: black;\n  width: inherit;\n}\n\n.dropdowncontent a:hover {\n  background-color: rgb(153, 196, 210);\n}\n\n.header {\n  text-align: center;\n  padding: 25px 0;\n  font-size: 24px;\n  font-weight: bolder;\n}\n\n#imgcarouselpanel {\n  min-height: 500px;\n  background-color: slategray;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 50px;\n  padding-bottom: 100px;\n}\n\n.imagecontainer {\n  height: 450px;\n  width: 600px;\n  border: 5px solid white;\n  border-radius: 4px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.slides {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.show {\n  visibility: visible;\n  opacity: 1;\n}\n\n#imgcarouselpanel .maincontent {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 25px;\n  align-items: center;\n}\n\n.slidebtn {\n  border: none;\n  background-color: rgb(220, 20, 60);\n  width: 100px;\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: inherit;\n  padding: 10px 10px;\n  border-radius: 4px;\n}\n\n.slidebtn:hover {\n  background-color: rgb(210, 10, 10);\n}\n\n.navigation {\n  position: absolute;\n  bottom: 5px;\n}\n\n.dot {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  border: 2px solid rgb(112, 128, 144);\n  background-color: rgba(112, 128, 144, 0.1);\n}\n\n.dot.show {\n  background-color: rgb(112, 128, 144);\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV;sCACoC;AACtC;;AAEA;EACE;sDACoD;AACtD;;AAEA;EACE,iBAAiB;EACjB,2BAA2B;EAC3B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,UAAU;AACZ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mCAAmC;EACnC,YAAY;EACZ,oBAAoB;EACpB,eAAe;EACf,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,cAAc;EACd,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,oCAAoC;EACpC,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,2BAA2B;EAC3B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,qBAAqB;AACvB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,kCAAkC;EAClC,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,0CAA0C;AAC5C;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:['* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  --shadow: rgba(0, 0, 0, 0.05) 0px 6px 10px 0px,\n    rgba(0, 0, 0, 0.1) 0px 0px 0px 1px;\n}\n\nbody {\n  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n}\n\n#dropdownpanel {\n  min-height: 500px;\n  background-color: lightgray;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 150px;\n}\n\n#dropdownpanel .maincontent {\n    display: flex;\n    flex-direction: row;\n    gap:20px;\n}\n\n.dropdowncontainer {\n  width: 200px;\n}\n\n.dropdownbutton {\n  position: relative;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 2px;\n  background-color: rgb(30, 144, 255);\n  color: white;\n  font-family: inherit;\n  font-size: 20px;\n  width: inherit;\n  box-shadow: var(--shadow);\n}\n\n.dropdownbutton:hover {\n  background-color: rgb(20, 134, 245);\n}\n\n.dropdowncontent {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: inherit;\n  box-shadow: var(--shadow);\n  visibility: hidden;\n  opacity: 0;\n}\n\n.dropdowncontent a {\n  padding: 10px 10px;\n  text-decoration: none;\n  background-color: rgb(173, 216, 230);\n  color: black;\n  width: inherit;\n}\n\n.dropdowncontent a:hover {\n  background-color: rgb(153, 196, 210);\n}\n\n.header {\n  text-align: center;\n  padding: 25px 0;\n  font-size: 24px;\n  font-weight: bolder;\n}\n\n#imgcarouselpanel {\n  min-height: 500px;\n  background-color: slategray;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 50px;\n  padding-bottom: 100px;\n}\n\n.imagecontainer {\n  height: 450px;\n  width: 600px;\n  border: 5px solid white;\n  border-radius: 4px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.slides {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.show {\n  visibility: visible;\n  opacity: 1;\n}\n\n#imgcarouselpanel .maincontent {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 25px;\n  align-items: center;\n}\n\n.slidebtn {\n  border: none;\n  background-color: rgb(220, 20, 60);\n  width: 100px;\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: inherit;\n  padding: 10px 10px;\n  border-radius: 4px;\n}\n\n.slidebtn:hover {\n  background-color: rgb(210, 10, 10);\n}\n\n.navigation {\n  position: absolute;\n  bottom: 5px;\n}\n\n.dot {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  border: 2px solid rgb(112, 128, 144);\n  background-color: rgba(112, 128, 144, 0.1);\n}\n\n.dot.show {\n  background-color: rgb(112, 128, 144);\n}\n'],sourceRoot:""}]);const A=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var o="",t=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),t&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=n(e),t&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(n,o,t,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),o&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=o):d[2]=o),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],o=n[3];if(!o)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},385:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),e.hash&&(n+=e.hash),e.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(n)?'"'.concat(n,'"'):n):n}},72:n=>{var e=[];function o(n){for(var o=-1,t=0;t<e.length;t++)if(e[t].identifier===n){o=t;break}return o}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var p=o(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var b=r(u,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:b,references:1})}a.push(l)}return a}function r(n,e){var o=e.domAPI(e);return o.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;o.update(n=e)}else o.remove()}}n.exports=function(n,r){var i=t(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=o(i[a]);e[A].references--}for(var c=t(n,r),s=0;s<i.length;s++){var d=o(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},659:n=>{var e={};n.exports=function(n,o){var t=function(n){if(void 0===e[n]){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(n){o=null}e[n]=o}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(o)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,o)=>{n.exports=function(n){var e=o.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(o){!function(n,e,o){var t="";o.supports&&(t+="@supports (".concat(o.supports,") {")),o.media&&(t+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(t+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),t+=o.css,r&&(t+="}"),o.media&&(t+="}"),o.supports&&(t+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,o)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},13:(n,e,o)=>{n.exports=o.p+"0638a86f1a42c5c1ad15.jpg"},410:(n,e,o)=>{n.exports=o.p+"bcedc5b8ac8a78dd1076.jpg"},247:(n,e,o)=>{n.exports=o.p+"a57115f1b3885a99b40a.jpg"},404:(n,e,o)=>{n.exports=o.p+"3178e5702788380bc22d.jpg"},97:(n,e,o)=>{n.exports=o.p+"73d8081d715e2ba3e8da.jpg"}},e={};function o(t){var r=e[t];if(void 0!==r)return r.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,o),i.exports}o.m=n,o.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return o.d(e,{a:e}),e},o.d=(n,e)=>{for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;o.g.importScripts&&(n=o.g.location+"");var e=o.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=n})(),o.b=document.baseURI||self.location.href,o.nc=void 0,(()=>{var n=o(72),e=o.n(n),t=o(825),r=o.n(t),i=o(659),a=o.n(i),A=o(56),c=o.n(A),s=o(540),d=o.n(s),l=o(113),p=o.n(l),u=o(365),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=a().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=d(),e()(u.A,b),u.A&&u.A.locals&&u.A.locals;var C=o(385),f=o.n(C),g=new URL(o(13),o.b),E=new URL(o(410),o.b),h=new URL(o(247),o.b),x=new URL(o(404),o.b),B=new URL(o(97),o.b);f()(g),f()(E),f()(h),f()(x),f()(B);const m=document.querySelector("#forclick"),v=document.querySelector("#clickcontent"),y=document.querySelector("#forhover"),w=document.querySelector("#hovercontent"),k=document.querySelectorAll(".slides"),L=document.querySelector(".next"),S=document.querySelector(".previous"),U=document.querySelectorAll(".dot");var j,Y,q;!function(n,e,o){const t=()=>{e.classList.toggle(o)};n.addEventListener("click",(n=>{n.stopPropagation(),t()})),document.documentElement.addEventListener("click",(()=>{e.classList.contains(o)&&t()}))}(m,v,"show"),Y=w,q="show",(j=y).addEventListener("mouseenter",(()=>{Y.classList.add(q)})),Y.addEventListener("mouseenter",(()=>{Y.classList.add(q)})),j.addEventListener("mouseleave",(()=>{Y.classList.remove(q)})),Y.addEventListener("mouseleave",(()=>{Y.classList.remove(q)})),function(n,e,o,t,r){const i=()=>{let e;return n.forEach(((n,o)=>{n.classList.contains(r)&&(e=o)})),e},a=e=>{const o=i();n[o].classList.remove(r),n[e].classList.add(r),A()},A=()=>{const n=i();e.forEach(((e,o)=>{o===n?e.classList.add("show"):e.classList.remove("show")}))};o.addEventListener("click",(()=>{const e=i();e<n.length-1&&a(e+1)})),t.addEventListener("click",(()=>{const n=i();n>0&&a(n-1)})),e.forEach(((n,e)=>{n.addEventListener("click",(()=>{a(e)}))})),n[0].classList.add(r),A()}([...k],[...U],L,S,"show")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,